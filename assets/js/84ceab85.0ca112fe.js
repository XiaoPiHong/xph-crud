"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[807,896,4604,6554,5438,3294,1822,3152,3791,6589,5566,3575,8612,8771,1450,6110,845],{75585:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>S,contentTitle:()=>D,default:()=>k,frontMatter:()=>I,metadata:()=>w,toc:()=>y});var r=o(86106),t=o(66205),s=o(90310);const p='import React from "react";\nimport { InputNumber } from "antd";\nimport dayjs from "dayjs";\nimport {\n  XphForm,\n  useXphForm,\n  IXphFormProps,\n  IXphFormActionType,\n} from "xph-crud";\n\nconst ReactApp: React.FC = () => {\n  const props: IXphFormProps = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 18 },\n    items: [\n      {\n        name: "Input",\n        label: "Input",\n        component: "Input",\n        required: true,\n        colProps: { span: 8 },\n        initialValue: "Input",\n        componentProps: {\n          onChange: (e) => {\n            // console.log(e);\n          },\n        },\n      },\n      {\n        name: "render",\n        label: "render",\n        render: ({ model, disabled, name, methods, componentProps }) => (\n          <div>\n            <InputNumber\n              disabled={disabled}\n              value={model[name]}\n              onChange={(e) => methods.setFieldsValue({ [name]: e })}\n              {...componentProps}\n            />\n          </div>\n        ),\n        componentProps: {\n          placeholder: "render",\n        },\n        show: ({ model }) => {\n          return model.Input !== "Input";\n        },\n        ifShow: ({ model }) => {\n          return model.Input;\n        },\n        colProps: { span: 8 },\n        initialValue: 2,\n        rules: [\n          {\n            required: true,\n            message: "render\u5fc5\u586b",\n          },\n        ],\n      },\n      {\n        name: "InputNumber",\n        label: "InputNumber",\n        component: "InputNumber",\n        componentProps: {\n          onBlur: (e) => {\n            console.log(e);\n          },\n          onChange: (e) => {\n            console.log(e);\n          },\n        },\n        initialValue: 2,\n        colProps: { span: 8 },\n      },\n      {\n        name: "Select",\n        label: "Select",\n        component: "Select",\n        componentProps: {\n          allowClear: true,\n          placeholder: "Select",\n          options: [\n            { label: "\u6d4b\u8bd5", value: "1" },\n            { label: "\u6d4b\u8bd52", value: "2" },\n          ],\n          onChange: (e) => {\n            console.log(e);\n          },\n        },\n        initialValue: "1",\n        colProps: { span: 8 },\n      },\n      {\n        name: "Transfer",\n        label: "Transfer",\n        component: "Transfer",\n        valuePropName: "targetKeys",\n        initialValue: ["1"],\n        componentProps: {\n          dataSource: [\n            {\n              key: "1",\n              title: "\u6807\u98981",\n            },\n            {\n              key: "2",\n              title: "\u6807\u98982",\n            },\n          ],\n          render: (item) => item.title,\n        },\n        colProps: { span: 8 },\n        rules: [\n          {\n            required: true,\n            type: "array",\n            message: "Transfer\u5fc5\u586b",\n          },\n        ],\n      },\n      {\n        name: "TreeSelect",\n        label: "TreeSelect",\n        component: "TreeSelect",\n        componentProps: {\n          placeholder: "\u8bf7\u9009\u62e9TreeSelect",\n          treeData: [\n            {\n              value: "parent 1",\n              title: "parent 1",\n              children: [\n                {\n                  value: "parent 1-0",\n                  title: "parent 1-0",\n                  children: [\n                    {\n                      value: "leaf1",\n                      title: "leaf1",\n                    },\n                    {\n                      value: "leaf2",\n                      title: "leaf2",\n                    },\n                  ],\n                },\n                {\n                  value: "parent 1-1",\n                  title: "parent 1-1",\n                  children: [\n                    {\n                      value: "leaf3",\n                      title: <b style={{ color: "#08c" }}>leaf3</b>,\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        initialValue: "leaf3",\n        colProps: { span: 8 },\n        rules: [\n          {\n            required: true,\n            message: "TreeSelect\u5fc5\u586b",\n          },\n        ],\n      },\n      {\n        name: "Switch",\n        label: "Switch",\n        component: "Switch",\n        componentProps: {},\n        initialValue: true,\n        valuePropName: "checked",\n        colProps: { span: 8 },\n      },\n      {\n        name: "Radio",\n        label: "Radio",\n        component: "Radio",\n        componentProps: {},\n        valuePropName: "checked",\n        initialValue: true,\n        colProps: { span: 8 },\n      },\n      {\n        name: "RadioGroup",\n        label: "RadioGroup",\n        component: "RadioGroup",\n        componentProps: {\n          options: [\n            { label: "A", value: "a" },\n            { label: "B", value: "b" },\n            { label: "C", value: "c" },\n            { label: "D", value: "d" },\n          ],\n        },\n        initialValue: "a",\n        colProps: { span: 8 },\n      },\n      {\n        name: "RadioButtonGroup",\n        label: "RadioButtonGroup",\n        component: "RadioGroup",\n        componentProps: {\n          optionType: "button",\n          buttonStyle: "solid",\n          options: [\n            { label: "A", value: "a", disabled: true },\n            { label: "B", value: "b", disabled: false },\n            { label: "C", value: "c", disabled: false },\n            { label: "D", value: "d", disabled: true },\n          ],\n        },\n        initialValue: "a",\n        colProps: { span: 8 },\n      },\n      {\n        name: "Checkbox",\n        label: "Checkbox",\n        component: "Checkbox",\n        componentProps: {},\n        valuePropName: "checked",\n        colProps: { span: 8 },\n        initialValue: true,\n      },\n      {\n        name: "CheckboxGroup",\n        label: "CheckboxGroup",\n        component: "CheckboxGroup",\n        componentProps: {\n          options: [\n            { label: "A", value: "a" },\n            { label: "B", value: "b" },\n            { label: "C", value: "c" },\n            { label: "D", value: "d" },\n          ],\n        },\n        initialValue: ["a"],\n        colProps: { span: 8 },\n      },\n      {\n        name: "Cascader",\n        label: "Cascader",\n        component: "Cascader",\n        componentProps: {\n          placeholder: "\u8bf7\u9009\u62e9Cascader",\n          options: [\n            {\n              value: "zhejiang",\n              label: "Zhejiang",\n              children: [\n                {\n                  value: "hangzhou",\n                  label: "Hangzhou",\n                  children: [\n                    {\n                      value: "xihu",\n                      label: "West Lake",\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        initialValue: ["zhejiang", "hangzhou", "xihu"],\n        colProps: { span: 8 },\n      },\n      {\n        name: "TimePicker",\n        label: "TimePicker",\n        component: "TimePicker",\n        componentProps: {\n          format: "HH:mm",\n          valueFormat: "HH:mm",\n        },\n        initialValue: dayjs("12:08", "HH:mm"),\n        colProps: { span: 8 },\n        rules: [\n          {\n            validator: async (rule, value) => {\n              if (!value) {\n                return Promise.reject("TimePicker\u5fc5\u586b");\n              }\n              return Promise.resolve();\n            },\n          },\n        ],\n      },\n      {\n        name: "DatePicker",\n        label: "DatePicker",\n        component: "DatePicker",\n        componentProps: {\n          format: "YYYY-MM-DD",\n          valueFormat: "YYYY-MM-DD",\n        },\n        colProps: { span: 8 },\n        initialValue: dayjs("2021-08-08", "YYYY-MM-DD"),\n      },\n      {\n        name: "MonthPicker",\n        label: "MonthPicker",\n        component: "MonthPicker",\n        componentProps: {\n          valueFormat: "YYYY-MM",\n        },\n        colProps: { span: 8 },\n        initialValue: dayjs("2021-08", "YYYY-MM"),\n      },\n      {\n        name: "WeekPicker",\n        label: "WeekPicker",\n        component: "WeekPicker",\n        componentProps: {\n          valueFormat: "YYYY-MM-DD HH:mm:ss",\n        },\n        colProps: { span: 8 },\n        initialValue: dayjs("2021-08-01", "YYYY-MM-DD"), // 2021-08-01\u662f21\u5e74\u7b2c32\u5468\n      },\n      {\n        name: "RangePicker",\n        label: "RangePicker",\n        component: "RangePicker",\n        componentProps: {\n          format: "YYYY-MM-DD",\n          valueFormat: "YYYY-MM-DD",\n        },\n        colProps: { span: 8 },\n        initialValue: [\n          dayjs("2021-08-01 00:00:00", "YYYY-MM-DD HH:mm:ss"),\n          dayjs("2021-08-08 23:59:59", "YYYY-MM-DD HH:mm:ss"),\n        ],\n      },\n      {\n        name: "InputPassword",\n        label: "InputPassword",\n        component: "InputPassword",\n        componentProps: {},\n        colProps: { span: 8 },\n        initialValue: "123456",\n      },\n      {\n        name: "InputTextArea",\n        label: "InputTextArea",\n        component: "InputTextArea",\n        componentProps: {},\n        colProps: { span: 8 },\n        initialValue: "123456",\n      },\n      {\n        name: "AutoComplete",\n        label: "AutoComplete",\n        component: "AutoComplete",\n        componentProps: {\n          options: [\n            { value: "Burns Bay Road" },\n            { value: "Downing Street" },\n            { value: "Wall Street" },\n          ],\n        },\n        initialValue: "Burns Bay Road",\n        colProps: { span: 8 },\n      },\n      {\n        name: "ApiSelect",\n        label: "ApiSelect",\n        component: "ApiSelect",\n        componentProps: ({ model }) => {\n          return {\n            placeholder: "ApiSelect",\n            allowClear: true,\n            immediate: true,\n            params: { a: model.Select },\n            api: async (params) => {\n              console.log(params, "GET ApiSelect===========================");\n              return [\n                { label: "\u6d4b\u8bd5", value: "1" },\n                { label: "\u6d4b\u8bd52", value: "2" },\n              ];\n            },\n          };\n        },\n        initialValue: "1",\n        colProps: { span: 8 },\n      },\n      {\n        name: "ApiTreeSelect",\n        label: "ApiTreeSelect",\n        component: "ApiTreeSelect",\n        componentProps: ({ model }) => {\n          return {\n            placeholder: "\u8bf7\u9009\u62e9ApiTreeSelect",\n            params: { a: model.Select },\n            immediate: true,\n            api: async (params) => {\n              console.log(\n                params,\n                "GET ApiTreeSelect==========================="\n              );\n              return [\n                {\n                  value: "parent 1",\n                  title: "parent 1",\n                  children: [\n                    {\n                      value: "parent 1-0",\n                      title: "parent 1-0",\n                      children: [\n                        {\n                          value: "leaf1",\n                          title: "leaf1",\n                        },\n                        {\n                          value: "leaf2",\n                          title: "leaf2",\n                        },\n                      ],\n                    },\n                    {\n                      value: "parent 1-1",\n                      title: "parent 1-1",\n                      children: [\n                        {\n                          value: "leaf3",\n                          title: <b style={{ color: "#08c" }}>leaf3</b>,\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ];\n            },\n          };\n        },\n        initialValue: "leaf3",\n        colProps: { span: 8 },\n        rules: [\n          {\n            required: true,\n            message: "ApiTreeSelect\u5fc5\u586b",\n          },\n        ],\n      },\n      {\n        name: "ApiTransfer",\n        label: "ApiTransfer",\n        component: "ApiTransfer",\n        valuePropName: "targetKeys",\n        initialValue: ["1"],\n        componentProps: ({ model }) => {\n          return {\n            params: { a: model.Select },\n            api: async (params) => {\n              // console.log(params, "GET ApiTransfer===========================");\n              return [\n                {\n                  key: "1",\n                  title: "\u6807\u98981",\n                },\n                {\n                  key: "2",\n                  title: "\u6807\u98982",\n                },\n              ];\n            },\n            render: (item) => item.title,\n          };\n        },\n        colProps: { span: 8 },\n        rules: [\n          {\n            required: true,\n            type: "array",\n            message: "ApiTransfer\u5fc5\u586b",\n          },\n        ],\n      },\n      {\n        name: "ApiAutoComplete",\n        label: "ApiAutoComplete",\n        component: "ApiAutoComplete",\n        componentProps: ({ model }) => {\n          return {\n            params: { a: model.Select },\n            immediate: true,\n            api: async (params) => {\n              console.log(\n                params,\n                "GET ApiAutoComplete==========================="\n              );\n              return [\n                { value: "Burns Bay Road" },\n                { value: "Downing Street" },\n                { value: "Wall Street" },\n              ];\n            },\n          };\n        },\n        initialValue: "Burns Bay Road",\n        colProps: { span: 8 },\n      },\n      {\n        name: "Upload",\n        label: "Upload",\n        component: "Upload",\n        componentProps: {\n          children: "\u4e0a\u4f20",\n          showUploadList: {},\n          listType: "picture-card",\n          beforeUpload(file) {\n            return false;\n          },\n          onChange(info) {\n            const { file, fileList } = info;\n            const { status } = file;\n            switch (status) {\n              case "removed": {\n                setFieldsValue({\n                  Upload: fileList,\n                });\n                break;\n              }\n              default: {\n                // \u4e0a\u4f20\uff08\u6b64\u5904\u7531\u4e8e\u6ca1\u6709\u4e0a\u4f20\u670d\u52a1\u5668\uff0c\u9ed8\u8ba4\u662f\u5047\u4e0a\u4f20\uff0c\u9ed8\u8ba4\u90fd\u662f\u6210\u529f\uff09\n                setFieldsValue({\n                  Upload: [\n                    {\n                      uid: "-1",\n                      name: "image.png",\n                      status: "done",\n                      url: "https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png",\n                    },\n                  ],\n                });\n              }\n            }\n          },\n        },\n        colProps: { span: 8 },\n        valuePropName: "fileList",\n        initialValue: [],\n        rules: [\n          {\n            validator: async (rule, value) => {\n              console.log("validate=================", value);\n              if (value && value.length === 0) {\n                return Promise.reject("\u8bf7\u4e0a\u4f20\u6587\u4ef6");\n              }\n              return Promise.resolve();\n            },\n          },\n        ],\n      },\n      {\n        name: "AutoUpload",\n        label: "AutoUpload",\n        component: "AutoUpload",\n        componentProps: {\n          /**\n           * @description \u4e0a\u4f20\u670d\u52a1\u5668\u63a5\u53e3\uff0c\u9700\u8981\u8fd4\u56de\uff1a\n           * type IFileList = Array<{\n           *   uid: string;\n           *   url: string;\n           *   status: string;\n           *   name: string;\n           * }>\n           */\n          // api: async (params) => {\n          //   /** \u6b64\u5904\u53ea\u662f\u6a21\u62df\u4e0a\u4f20\u670d\u52a1\u5668\u7684\u64cd\u4f5c */\n          //   return [\n          //     {\n          //       uid: `${+new Date()}${Math.random()}`,\n          //       name: "image.png",\n          //       status: "done",\n          //       url: "https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png",\n          //     },\n          //   ];\n          // },\n          maxSize: 1, // \u6587\u4ef6\u6700\u5927\u9650\u5236\n          maxCount: 2, // \u6587\u4ef6\u6700\u5927\u6570\u91cf\n          /**\n           * @description \u8868\u5355\u83b7\u53d6\u5230\u7684\u7c7b\u578b\n           * "String"\uff08\u9ed8\u8ba4\uff0c\u914d\u5408api\u4f7f\u7528\uff09 | "String[]"\uff08\u914d\u5408api\u4f7f\u7528\uff09 | "File[]" | "FileList"\uff08\u914d\u5408api\u4f7f\u7528\uff09\n           * String\u65f6\u5982\u679c\u4e0a\u4f20\u591a\u6587\u4ef6\uff0c\u5219\u8fd4\u56de\u5b57\u7b26\u4e32,\u62fc\u63a5   initialValue\uff1a\u5b57\u7b26\u4e32\n           * String[]\u65f6\u5982\u679c\u4e0a\u4f20\u591a\u6587\u4ef6\uff0c\u5219\u8fd4\u56de\u6570\u7ec4        initialValue\uff1a\u6570\u7ec4\n           * File[]\u65f6\u5982\u679c\u4e0a\u4f20\u591a\u6587\u4ef6\uff0c\u5219\u8fd4\u56de\u6570\u7ec4          initialValue\uff1a\u6570\u7ec4\n           * FileList\u65f6\u5982\u679c\u4e0a\u4f20\u591a\u6587\u4ef6\uff0c\u5219\u8fd4\u56de\u6570\u7ec4        initialValue\uff1a\u6570\u7ec4\n           */\n          returnType: "File[]",\n          onChange(val) {\n            console.log("AutoUpload onChange========================", val);\n          },\n        },\n        colProps: { span: 8 },\n        initialValue: [],\n        rules: [\n          {\n            validator: async (rule, value) => {\n              console.log("validate=================", value);\n              if (!value.length) {\n                return Promise.reject("\u8bf7\u4e0a\u4f20\u6587\u4ef6");\n              }\n              return Promise.resolve();\n            },\n          },\n        ],\n      },\n      {\n        name: "Button",\n        label: "Button",\n        component: "Button",\n        componentProps: {\n          children: "Button",\n          onClick: async () => {\n            // console.log(reactFormRef.current?.getFieldsValue(true));\n            // console.log(reactFormRef.current?.setFieldsValue({ Input: "123" }));\n            // console.log(reactFormRef.current?.getFieldsValue(["Input"]));\n            // console.log(await reactFormRef.current?.resetFields());\n            // console.log(await reactFormRef.current?.validator());\n            console.log(getFieldsValue(true));\n            console.log(\n              setFieldsValue({\n                Input: "Input test",\n                render: 23,\n                InputNumber: 21,\n                ApiSelect: "2",\n                Select: null,\n                Transfer: [],\n                ApiTransfer: [],\n                ApiTreeSelect: null,\n                TreeSelect: null,\n                Switch: false,\n                Radio: false,\n                RadioGroup: "b",\n                RadioButtonGroup: "b",\n                Checkbox: false,\n                CheckboxGroup: ["a"],\n                Cascader: [],\n                TimePicker: "2021-08-01 03:59:59",\n                DatePicker: "2021-08-01",\n                MonthPicker: "2021-09",\n                WeekPicker: "2021-09-02 00:00:00",\n                RangePicker: ["2021-08-02", "2021-08-07"],\n                InputPassword: "12345678",\n                InputTextArea: "123456789",\n                AutoComplete: "Burns Bay Road Test",\n                ApiAutoComplete: "Burns Bay Road Test",\n                Upload: [],\n                AutoUpload: [],\n              })\n            );\n            // console.log(getFieldsValue(["RangePicker"]));\n            // console.log(await resetFields());\n            // console.log(await validator());\n          },\n        },\n        colProps: { span: 8 },\n      },\n      {\n        name: "ResetButton",\n        label: "ResetButton",\n        component: "Button",\n        componentProps: {\n          children: "ResetButton",\n          onClick: async () => {\n            console.log(await resetFields());\n          },\n        },\n        colProps: { span: 8 },\n      },\n      {\n        name: "ValidateButton",\n        label: "ValidateButton",\n        component: "Button",\n        componentProps: {\n          children: "ValidateButton",\n          onClick: async () => {\n            console.log(await validator());\n          },\n        },\n        colProps: { span: 8 },\n      },\n    ],\n  };\n\n  /**\n   * ==========================================\n   * \u4e00\u3001\n   *\n   * \u7b2c\u4e00\u79cd\u8c03\u7528form\u7ec4\u4ef6api\u7684\u65b9\u5f0f\uff0c\u901a\u8fc7useRef\n   *=============================================\n   *  */\n  const reactFormRef = React.useRef<IXphFormActionType>(null);\n\n  /**\n   * ==========================================\n   * \u4e8c\u3001\n   *\n   * \u7b2c\u4e8c\u79cd\u8c03\u7528form\u7ec4\u4ef6api\u7684\u65b9\u5f0f\uff0c\u901a\u8fc7\u5c01\u88c5\u7684useReactForm\u65b9\u6cd5\n   *=============================================\n   * */\n  const [register, { setFieldsValue, getFieldsValue, resetFields, validator }] =\n    useXphForm();\n  return (\n    <div style={{ minWidth: "1400px" }}>\n      <XphForm register={register} ref={reactFormRef} {...props}></XphForm>\n    </div>\n  );\n};\n\nexport default ReactApp;\n';var i=o(36899),a=o(39764),l=o(80667),m=o(62387),c=o(66738),u=o(8575),d=o(60162),f=o(97491),h=o(52426),P=o(95965),b=o(80764),F=o(53384),x=o(79646),v=o(68959),g=o(33303),R=o(62243),j=o(54364);const I={},D="XphForm \u53ef\u914d\u7f6e\u8868\u5355",w={id:"comp/form/base",title:"XphForm \u53ef\u914d\u7f6e\u8868\u5355",description:"\u57fa\u672c\u4f7f\u7528",source:"@site/docs/comp/form/base.mdx",sourceDirName:"comp/form",slug:"/comp/form/base",permalink:"/xph-crud/docs/comp/form/base",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"comp",next:{title:"\u8868\u5355\u9879\u7ec4\u4ef6\u6620\u5c04",permalink:"/xph-crud/docs/comp/form/properties/items/properties/component/"}},S={},y=[{value:"\u57fa\u672c\u4f7f\u7528",id:"\u57fa\u672c\u4f7f\u7528",level:2},{value:"\u6848\u4f8b",id:"\u6848\u4f8b",level:2},...a.toc,...l.toc,...m.toc,...c.toc,...u.toc,...f.toc,...g.toc,...j.toc,...b.toc,...F.toc,...x.toc,...v.toc,...P.toc,...R.toc,{value:"\u8868\u5355\u9879\u7ec4\u4ef6\u6620\u5c04",id:"\u8868\u5355\u9879\u7ec4\u4ef6\u6620\u5c04",level:3},...d.toc,...h.toc,{value:"API",id:"api",level:2},{value:"\u5728 CodeSandbox \u5c1d\u8bd5",id:"\u5728-codesandbox-\u5c1d\u8bd5",level:2}];function A(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",...(0,t.R)(),...e.components};return s.z9||C("FormDemos",!1),s.z9.Base||C("FormDemos.Base",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"xphform-\u53ef\u914d\u7f6e\u8868\u5355",children:"XphForm \u53ef\u914d\u7f6e\u8868\u5355"})}),"\n",(0,r.jsx)(n.h2,{id:"\u57fa\u672c\u4f7f\u7528",children:"\u57fa\u672c\u4f7f\u7528"}),"\n",(0,r.jsx)(i.A,{rawStr:p,children:(0,r.jsx)(s.z9.Base,{})}),"\n",(0,r.jsx)(n.h2,{id:"\u6848\u4f8b",children:"\u6848\u4f8b"}),"\n",(0,r.jsx)(a.default,{}),"\n",(0,r.jsx)(l.default,{}),"\n",(0,r.jsx)(m.default,{}),"\n",(0,r.jsx)(c.default,{}),"\n",(0,r.jsx)(u.default,{}),"\n",(0,r.jsx)(f.default,{}),"\n",(0,r.jsx)(g.default,{}),"\n",(0,r.jsx)(j.default,{}),"\n",(0,r.jsx)(b.default,{}),"\n",(0,r.jsx)(F.default,{}),"\n",(0,r.jsx)(x.default,{}),"\n",(0,r.jsx)(v.default,{}),"\n",(0,r.jsx)(P.default,{}),"\n",(0,r.jsx)(R.default,{}),"\n",(0,r.jsx)(n.h3,{id:"\u8868\u5355\u9879\u7ec4\u4ef6\u6620\u5c04",children:"\u8868\u5355\u9879\u7ec4\u4ef6\u6620\u5c04"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/comp/form/properties/items/properties/component",children:"\u7ec4\u4ef6\u6620\u5c04"})}),"\n",(0,r.jsx)(d.default,{}),"\n",(0,r.jsx)(h.default,{}),"\n",(0,r.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/api/interfaces/IXphFormProps",children:"Form API"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/api/interfaces/IXphFormActionType",children:"FormInstance API"})}),"\n",(0,r.jsx)(n.h2,{id:"\u5728-codesandbox-\u5c1d\u8bd5",children:"\u5728 CodeSandbox \u5c1d\u8bd5"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://codesandbox.io/p/github/XiaoPiHong/xph-crud/codesandbox?embed=1&file=%2Fexamples%2Froutes%2Findex.tsx",children:(0,r.jsx)(n.img,{src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit XiaoPiHong/xph-crud/codesandbox"})})})]})}function k(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(A,{...e})}):A(e)}function C(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},62387:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React from "react";\nimport { XphForm, IXphFormProps } from "xph-crud";\n\nconst ReactApp: React.FC = () => {\n  const props: IXphFormProps = {\n    colProps: { span: 4 },\n    items: [\n      {\n        name: "Input1",\n        label: "Input1",\n        component: "Input",\n        componentProps: {},\n      },\n      {\n        name: "Input2",\n        label: "Input2",\n        component: "Input",\n        componentProps: {},\n        colProps: {\n          span: 20, // \u4f18\u5148\u7ea7\u9ad8\u4e8e\u8868\u5355\u7684colProps\n        },\n      },\n    ],\n  };\n\n  return <XphForm {...props}></XphForm>;\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/colProps",title:"colProps",description:"\u6805\u683c",source:"@site/docs/comp/form/properties/colProps.mdx",sourceDirName:"comp/form/properties",slug:"/comp/form/properties/colProps",permalink:"/xph-crud/docs/comp/form/properties/colProps",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"\u6805\u683c",id:"\u6805\u683c",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.ColProps||h("FormDemos.Properties.ColProps",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u6805\u683c",children:"\u6805\u683c"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.ColProps,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},39764:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React from "react";\nimport { XphForm, IXphFormProps } from "xph-crud";\n\nconst ReactApp: React.FC = () => {\n  const props: IXphFormProps = {\n    collapsible: true, // \u5f00\u542f\u6298\u53e0\n    collapseNum: 2, // \u8d85\u51fa\u4e24\u4e2a\u6298\u53e0\uff08collapsible\u4e3atrue\u624d\u751f\u6548\uff09\n    items: [\n      {\n        name: "Input1",\n        label: "Input1",\n        component: "Input",\n        componentProps: {},\n      },\n      {\n        name: "Input2",\n        label: "Input2",\n        component: "Input",\n        componentProps: {},\n      },\n      {\n        name: "Input3",\n        label: "Input3",\n        component: "Input",\n        componentProps: {},\n      },\n    ],\n  };\n\n  return <XphForm {...props}></XphForm>;\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/collapsible",title:"collapsible",description:"\u8868\u5355\u6298\u53e0",source:"@site/docs/comp/form/properties/collapsible.mdx",sourceDirName:"comp/form/properties",slug:"/comp/form/properties/collapsible",permalink:"/xph-crud/docs/comp/form/properties/collapsible",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"\u8868\u5355\u6298\u53e0",id:"\u8868\u5355\u6298\u53e0",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.Collapsible||h("FormDemos.Properties.Collapsible",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u8868\u5355\u6298\u53e0",children:"\u8868\u5355\u6298\u53e0"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.Collapsible,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8575:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React, { useState } from "react";\nimport { XphForm, IXphFormProps } from "xph-crud";\nimport { Radio, Divider } from "antd";\n\nconst ReactApp: React.FC = () => {\n  const [disabled, setDisabled] = useState<boolean>(false);\n\n  const props: IXphFormProps = {\n    colProps: { span: 4, offset: 1 },\n    disabled,\n    items: [\n      {\n        name: "Input1",\n        label: "Input1",\n        component: "Input",\n        componentProps: {},\n      },\n      {\n        name: "InputNumber",\n        label: "InputNumber",\n        component: "InputNumber",\n        componentProps: {\n          onBlur: (e) => {\n            console.log(e);\n          },\n          onChange: (e) => {\n            console.log(e);\n          },\n        },\n        initialValue: 2,\n      },\n    ],\n  };\n\n  const onChange = (e) => {\n    setDisabled(e.target.value);\n  };\n\n  return (\n    <div>\n      <Radio.Group\n        options={[\n          {\n            label: "\u7981\u7528",\n            value: true,\n          },\n          {\n            label: "\u4e0d\u7981\u7528",\n            value: false,\n          },\n        ]}\n        onChange={onChange}\n        value={disabled}\n        optionType="button"\n      />\n      <Divider />\n      <XphForm {...props}></XphForm>\n    </div>\n  );\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/disabled",title:"disabled",description:"\u7981\u7528",source:"@site/docs/comp/form/properties/disabled.mdx",sourceDirName:"comp/form/properties",slug:"/comp/form/properties/disabled",permalink:"/xph-crud/docs/comp/form/properties/disabled",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"\u7981\u7528",id:"\u7981\u7528",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.Disabled||h("FormDemos.Properties.Disabled",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u7981\u7528",children:"\u7981\u7528"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.Disabled,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},62243:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React from "react";\nimport { XphForm, IXphFormProps } from "xph-crud";\n\nconst ReactApp: React.FC = () => {\n  const props: IXphFormProps = {\n    items: [\n      {\n        name: "Input",\n        label: "Input",\n        component: "Input",\n        /** \u6b64\u5904\u7684componentProps\u4e2d\u7684\u5c5e\u6027\uff0c\u4f1a\u76f4\u63a5\u900f\u4f20\u7ed9\u6839\u90e8\u7684\u8868\u5355\u7ec4\u4ef6 */\n        /** \u82e5\u6620\u5c04\u7684\u8868\u5355\u7ec4\u4ef6\u662fantd\u7684\u7ec4\u4ef6\uff0c\u4f1a\u5b8c\u5168\u7ee7\u627fantd\u7ec4\u4ef6\u7684\u5c5e\u6027 */\n        componentProps: {\n          addonAfter: ".com",\n          addonBefore: "https://",\n          maxLength: 20,\n          placeholder: "\u4e09\u7ea7\u57df\u540d.\u4e8c\u7ea7\u57df\u540d",\n          allowClear: true,\n          /** \u66f4\u591a\u5c5e\u6027\u8bf7\u770b https://ant.design/index-cn  ... */\n        },\n        rules: [\n          {\n            required: true,\n            message: "\u8bf7\u8f93\u5165\u4e09\u7ea7\u57df\u540d.\u4e8c\u7ea7\u57df\u540d",\n          },\n        ],\n      },\n    ],\n  };\n\n  return <XphForm {...props}></XphForm>;\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/items/properties/componentProps",title:"componentProps",description:"\u8868\u5355\u9879\u7ec4\u4ef6\u5c5e\u6027",source:"@site/docs/comp/form/properties/items/properties/componentProps.mdx",sourceDirName:"comp/form/properties/items/properties",slug:"/comp/form/properties/items/properties/componentProps",permalink:"/xph-crud/docs/comp/form/properties/items/properties/componentProps",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"\u8868\u5355\u9879\u7ec4\u4ef6\u5c5e\u6027",id:"\u8868\u5355\u9879\u7ec4\u4ef6\u5c5e\u6027",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.items||h("FormDemos.Properties.items",!1),s.z9.Properties.items.Properties||h("FormDemos.Properties.items.Properties",!1),s.z9.Properties.items.Properties.ComponentProps||h("FormDemos.Properties.items.Properties.ComponentProps",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u8868\u5355\u9879\u7ec4\u4ef6\u5c5e\u6027",children:"\u8868\u5355\u9879\u7ec4\u4ef6\u5c5e\u6027"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.items.Properties.ComponentProps,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},33303:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React, { useState } from "react";\nimport { XphForm, IXphFormProps } from "xph-crud";\nimport { Radio, Divider } from "antd";\n\nconst ReactApp: React.FC = () => {\n  const [disabled, setDisabled] = useState<boolean>(false);\n\n  const props: IXphFormProps = {\n    colProps: { span: 11, offset: 1 },\n    labelCol: { style: { width: "100px" } },\n    items: [\n      {\n        name: "Input",\n        label: "Input",\n        component: "Input",\n        componentProps: {\n          placeholder: "Input\u6709\u503c\u65f6\u7981\u7528Select",\n        },\n      },\n      {\n        name: "Select",\n        label: "Select",\n        component: "Select",\n        componentProps: {\n          allowClear: true,\n          placeholder: "Select",\n          options: [\n            { label: "\u6d4b\u8bd5", value: "1" },\n            { label: "\u6d4b\u8bd52", value: "2" },\n          ],\n        },\n        disabled: ({ model }) => {\n          return disabled || model.Input;\n        },\n      },\n      {\n        name: "InputNumber",\n        label: "InputNumber",\n        component: "InputNumber",\n        componentProps: {\n          placeholder: "\u7981\u7528",\n        },\n        disabled: true,\n      },\n    ],\n  };\n\n  const onChange = (e) => {\n    setDisabled(e.target.value);\n  };\n\n  return (\n    <div>\n      <Radio.Group\n        options={[\n          {\n            label: "\u7981\u7528Select",\n            value: true,\n          },\n          {\n            label: "\u4e0d\u7981\u7528Select",\n            value: false,\n          },\n        ]}\n        onChange={onChange}\n        value={disabled}\n        optionType="button"\n      />\n      <Divider />\n      <XphForm {...props}></XphForm>\n    </div>\n  );\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/items/properties/disabled",title:"disabled",description:"\u8868\u5355\u9879\u7981\u7528",source:"@site/docs/comp/form/properties/items/properties/disabled.mdx",sourceDirName:"comp/form/properties/items/properties",slug:"/comp/form/properties/items/properties/disabled",permalink:"/xph-crud/docs/comp/form/properties/items/properties/disabled",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"\u8868\u5355\u9879\u7981\u7528",id:"\u8868\u5355\u9879\u7981\u7528",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.items||h("FormDemos.Properties.items",!1),s.z9.Properties.items.Properties||h("FormDemos.Properties.items.Properties",!1),s.z9.Properties.items.Properties.Disabled||h("FormDemos.Properties.items.Properties.Disabled",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u8868\u5355\u9879\u7981\u7528",children:"\u8868\u5355\u9879\u7981\u7528"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.items.Properties.Disabled,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},68959:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React, { useState } from "react";\nimport { XphForm, IXphFormProps } from "xph-crud";\nimport { Radio, Divider } from "antd";\n\nconst ReactApp: React.FC = () => {\n  const [forceRow, setForceRow] = useState<boolean>(false);\n\n  const props: IXphFormProps = {\n    colProps: { span: 11, offset: 1 },\n    labelCol: { style: { width: "100px" } },\n    items: [\n      {\n        name: "Input",\n        label: "Input",\n        component: "Input",\n        componentProps: {},\n      },\n      {\n        name: "Select",\n        label: "Select",\n        component: "Select",\n        componentProps: {\n          allowClear: true,\n          placeholder: "Select",\n          options: [\n            { label: "\u6d4b\u8bd5", value: "1" },\n            { label: "\u6d4b\u8bd52", value: "2" },\n          ],\n        },\n        forceRow,\n      },\n      {\n        name: "InputNumber",\n        label: "InputNumber",\n        component: "InputNumber",\n        componentProps: {},\n      },\n    ],\n  };\n\n  const onChange = (e) => {\n    setForceRow(e.target.value);\n  };\n\n  return (\n    <div>\n      <Radio.Group\n        options={[\n          {\n            label: "Select\u6362\u884c",\n            value: true,\n          },\n          {\n            label: "Select\u4e0d\u6362\u884c",\n            value: false,\n          },\n        ]}\n        onChange={onChange}\n        value={forceRow}\n        optionType="button"\n      />\n      <Divider />\n      <XphForm {...props}></XphForm>\n    </div>\n  );\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/items/properties/forceRow",title:"forceRow",description:"\u5f3a\u5236\u6362\u884c",source:"@site/docs/comp/form/properties/items/properties/forceRow.mdx",sourceDirName:"comp/form/properties/items/properties",slug:"/comp/form/properties/items/properties/forceRow",permalink:"/xph-crud/docs/comp/form/properties/items/properties/forceRow",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"\u5f3a\u5236\u6362\u884c",id:"\u5f3a\u5236\u6362\u884c",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.items||h("FormDemos.Properties.items",!1),s.z9.Properties.items.Properties||h("FormDemos.Properties.items.Properties",!1),s.z9.Properties.items.Properties.ForceRow||h("FormDemos.Properties.items.Properties.ForceRow",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u5f3a\u5236\u6362\u884c",children:"\u5f3a\u5236\u6362\u884c"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.items.Properties.ForceRow,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},53384:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React from "react";\nimport { XphForm, IXphFormProps } from "xph-crud";\n\nconst ReactApp: React.FC = () => {\n  const props: IXphFormProps = {\n    items: [\n      {\n        name: "Input",\n        label: "Input",\n        component: "Input",\n        required: true,\n        componentProps: {},\n      },\n      {\n        name: "Select",\n        label: "Select",\n        component: "Select",\n        componentProps: {\n          allowClear: true,\n          placeholder: "Select",\n          options: [\n            { label: "\u6d4b\u8bd5", value: "1" },\n            { label: "\u6d4b\u8bd52", value: "2" },\n          ],\n        },\n        initialValue: "1",\n        ifShow: ({ model }) => {\n          // Input\u6709\u503c\u624d\u663e\u793a\uff08\u4f1a\u65b0\u589e\u6216\u5220\u9664\u8282\u70b9\uff09\n          return model.Input;\n        },\n      },\n    ],\n  };\n\n  return <XphForm {...props}></XphForm>;\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/items/properties/ifShow",title:"ifShow",description:"\u9690\u85cf\u8868\u5355\u9879\uff08\u4f1a\u65b0\u589e\u5220\u9664\u8282\u70b9\uff09",source:"@site/docs/comp/form/properties/items/properties/ifShow.mdx",sourceDirName:"comp/form/properties/items/properties",slug:"/comp/form/properties/items/properties/ifShow",permalink:"/xph-crud/docs/comp/form/properties/items/properties/ifShow",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"\u9690\u85cf\u8868\u5355\u9879\uff08\u4f1a\u65b0\u589e\u5220\u9664\u8282\u70b9\uff09",id:"\u9690\u85cf\u8868\u5355\u9879\u4f1a\u65b0\u589e\u5220\u9664\u8282\u70b9",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.items||h("FormDemos.Properties.items",!1),s.z9.Properties.items.Properties||h("FormDemos.Properties.items.Properties",!1),s.z9.Properties.items.Properties.IfShow||h("FormDemos.Properties.items.Properties.IfShow",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u9690\u85cf\u8868\u5355\u9879\u4f1a\u65b0\u589e\u5220\u9664\u8282\u70b9",children:"\u9690\u85cf\u8868\u5355\u9879\uff08\u4f1a\u65b0\u589e\u5220\u9664\u8282\u70b9\uff09"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.items.Properties.IfShow,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},54364:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React from "react";\nimport { XphForm, IXphFormProps } from "xph-crud";\nimport dayjs from "dayjs";\n\nconst ReactApp: React.FC = () => {\n  const props: IXphFormProps = {\n    items: [\n      {\n        name: "Input",\n        label: "Input",\n        component: "Input",\n        componentProps: {},\n        initialValue: "Input",\n      },\n      {\n        name: "Select",\n        label: "Select",\n        component: "Select",\n        componentProps: {\n          allowClear: true,\n          placeholder: "Select",\n          options: [\n            { label: "\u6d4b\u8bd5", value: "1" },\n            { label: "\u6d4b\u8bd52", value: "2" },\n          ],\n        },\n        initialValue: "1",\n      },\n      {\n        name: "Switch",\n        label: "Switch",\n        component: "Switch",\n        componentProps: {},\n        initialValue: true,\n        /** \u5b9a\u4e49\u5b50\u8282\u70b9\u7684\u503c\u7684\u5c5e\u6027\uff0c\u5982 Switch\u3001Checkbox \u7684\u662f checked */\n        valuePropName: "checked",\n      },\n      {\n        name: "DatePicker",\n        label: "DatePicker",\n        component: "DatePicker",\n        componentProps: {\n          format: "YYYY-MM-DD",\n          valueFormat: "YYYY-MM-DD",\n        },\n        initialValue: dayjs("2021-08-08", "YYYY-MM-DD"),\n      },\n    ],\n  };\n\n  return <XphForm {...props}></XphForm>;\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/items/properties/initialValue",title:"initialValue",description:"\u9ed8\u8ba4\u503c",source:"@site/docs/comp/form/properties/items/properties/initialValue.mdx",sourceDirName:"comp/form/properties/items/properties",slug:"/comp/form/properties/items/properties/initialValue",permalink:"/xph-crud/docs/comp/form/properties/items/properties/initialValue",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"\u9ed8\u8ba4\u503c",id:"\u9ed8\u8ba4\u503c",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.items||h("FormDemos.Properties.items",!1),s.z9.Properties.items.Properties||h("FormDemos.Properties.items.Properties",!1),s.z9.Properties.items.Properties.InitialValue||h("FormDemos.Properties.items.Properties.InitialValue",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u9ed8\u8ba4\u503c",children:"\u9ed8\u8ba4\u503c"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.items.Properties.InitialValue,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},95965:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React from "react";\nimport { XphForm, IXphFormProps } from "xph-crud";\nimport { InputNumber } from "antd";\n\nconst ReactApp: React.FC = () => {\n  const props: IXphFormProps = {\n    items: [\n      {\n        name: "render",\n        label: "render",\n        render: ({ model, disabled, name, methods, componentProps }) => (\n          <div>\n            <InputNumber\n              disabled={disabled}\n              value={model[name]}\n              onChange={(e) => methods.setFieldsValue({ [name]: e })}\n              {...componentProps}\n            />\n            <span style={{ marginLeft: 8, fontWeight: "bold", color: "red" }}>\n              {model[name]}\n            </span>\n          </div>\n        ),\n        componentProps: {\n          placeholder: "render",\n        },\n        initialValue: 2,\n        rules: [\n          {\n            required: true,\n            message: "render\u5fc5\u586b",\n          },\n        ],\n      },\n    ],\n  };\n\n  return <XphForm {...props}></XphForm>;\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/items/properties/render",title:"render",description:"\u81ea\u5b9a\u4e49\u8868\u5355\u9879\u7ec4\u4ef6",source:"@site/docs/comp/form/properties/items/properties/render.mdx",sourceDirName:"comp/form/properties/items/properties",slug:"/comp/form/properties/items/properties/render",permalink:"/xph-crud/docs/comp/form/properties/items/properties/render",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"\u81ea\u5b9a\u4e49\u8868\u5355\u9879\u7ec4\u4ef6",id:"\u81ea\u5b9a\u4e49\u8868\u5355\u9879\u7ec4\u4ef6",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.items||h("FormDemos.Properties.items",!1),s.z9.Properties.items.Properties||h("FormDemos.Properties.items.Properties",!1),s.z9.Properties.items.Properties.Render||h("FormDemos.Properties.items.Properties.Render",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u81ea\u5b9a\u4e49\u8868\u5355\u9879\u7ec4\u4ef6",children:"\u81ea\u5b9a\u4e49\u8868\u5355\u9879\u7ec4\u4ef6"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.items.Properties.Render,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},79646:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React from "react";\nimport { XphForm, IXphFormProps } from "xph-crud";\n\nconst ReactApp: React.FC = () => {\n  const props: IXphFormProps = {\n    items: [\n      {\n        name: "Input",\n        label: "Input",\n        component: "Input",\n        required: true,\n        componentProps: {},\n      },\n      {\n        name: "Transfer",\n        label: "Transfer",\n        component: "Transfer",\n        valuePropName: "targetKeys",\n        initialValue: ["1"],\n        componentProps: {\n          dataSource: [\n            {\n              key: "1",\n              title: "\u6807\u98981",\n            },\n            {\n              key: "2",\n              title: "\u6807\u98982",\n            },\n          ],\n          render: (item) => item.title,\n        },\n        rules: [\n          {\n            required: true,\n            type: "array",\n            message: "Transfer\u5fc5\u586b",\n          },\n        ],\n      },\n      {\n        name: "TimePicker",\n        label: "TimePicker",\n        component: "TimePicker",\n        componentProps: {\n          format: "HH:mm",\n          valueFormat: "HH:mm",\n        },\n        rules: [\n          {\n            validator: async (rule, value) => {\n              if (!value) {\n                return Promise.reject("TimePicker\u5fc5\u586b");\n              }\n              return Promise.resolve();\n            },\n          },\n        ],\n      },\n    ],\n  };\n\n  return <XphForm {...props}></XphForm>;\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/items/properties/rules",title:"rules",description:"\u6821\u9a8c\u89c4\u5219",source:"@site/docs/comp/form/properties/items/properties/rules.mdx",sourceDirName:"comp/form/properties/items/properties",slug:"/comp/form/properties/items/properties/rules",permalink:"/xph-crud/docs/comp/form/properties/items/properties/rules",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"\u6821\u9a8c\u89c4\u5219",id:"\u6821\u9a8c\u89c4\u5219",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.items||h("FormDemos.Properties.items",!1),s.z9.Properties.items.Properties||h("FormDemos.Properties.items.Properties",!1),s.z9.Properties.items.Properties.Rules||h("FormDemos.Properties.items.Properties.Rules",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u6821\u9a8c\u89c4\u5219",children:"\u6821\u9a8c\u89c4\u5219"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.items.Properties.Rules,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},80764:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React from "react";\nimport { XphForm, IXphFormProps } from "xph-crud";\n\nconst ReactApp: React.FC = () => {\n  const props: IXphFormProps = {\n    items: [\n      {\n        name: "Input",\n        label: "Input",\n        component: "Input",\n        required: true,\n        componentProps: {},\n      },\n      {\n        name: "Select",\n        label: "Select",\n        component: "Select",\n        componentProps: {\n          allowClear: true,\n          placeholder: "Select",\n          options: [\n            { label: "\u6d4b\u8bd5", value: "1" },\n            { label: "\u6d4b\u8bd52", value: "2" },\n          ],\n        },\n        initialValue: "1",\n        show: ({ model }) => {\n          // Input\u6709\u503c\u624d\u663e\u793a\uff08\u76f8\u5f53\u4e8edisplay:none\uff09\n          return model.Input;\n        },\n      },\n    ],\n  };\n\n  return <XphForm {...props}></XphForm>;\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/items/properties/show",title:"show",description:"\u9690\u85cf\u8868\u5355\u9879\uff08\u76f8\u5f53\u4e8e display: none\uff09",source:"@site/docs/comp/form/properties/items/properties/show.mdx",sourceDirName:"comp/form/properties/items/properties",slug:"/comp/form/properties/items/properties/show",permalink:"/xph-crud/docs/comp/form/properties/items/properties/show",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"\u9690\u85cf\u8868\u5355\u9879\uff08\u76f8\u5f53\u4e8e display: none\uff09",id:"\u9690\u85cf\u8868\u5355\u9879\u76f8\u5f53\u4e8e-display-none",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.items||h("FormDemos.Properties.items",!1),s.z9.Properties.items.Properties||h("FormDemos.Properties.items.Properties",!1),s.z9.Properties.items.Properties.Show||h("FormDemos.Properties.items.Properties.Show",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u9690\u85cf\u8868\u5355\u9879\u76f8\u5f53\u4e8e-display-none",children:"\u9690\u85cf\u8868\u5355\u9879\uff08\u76f8\u5f53\u4e8e display: none\uff09"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.items.Properties.Show,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},80667:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React, { useState } from "react";\nimport { XphForm, IXphFormProps } from "xph-crud";\n\nconst ReactApp: React.FC = () => {\n  const [layout, seLayout] = useState<"vertical" | "horizontal">("vertical");\n\n  const props: IXphFormProps = {\n    layout,\n    colProps: { span: 4, offset: 1 },\n    items: [\n      {\n        name: "Input1",\n        label: "Input1",\n        component: "Input",\n        componentProps: {},\n      },\n      {\n        name: "Input2",\n        label: "Input2",\n        component: "Input",\n        componentProps: {},\n      },\n      {\n        name: "Button",\n        label: "\u5207\u6362\u5e03\u5c40",\n        component: "Button",\n        componentProps: {\n          onClick: () => {\n            seLayout(layout === "vertical" ? "horizontal" : "vertical");\n          },\n          children: "\u5207\u6362\u5e03\u5c40",\n        },\n      },\n    ],\n  };\n\n  return <XphForm {...props}></XphForm>;\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/layout",title:"layout",description:"\u5e03\u5c40",source:"@site/docs/comp/form/properties/layout.mdx",sourceDirName:"comp/form/properties",slug:"/comp/form/properties/layout",permalink:"/xph-crud/docs/comp/form/properties/layout",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"\u5e03\u5c40",id:"\u5e03\u5c40",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.Layout||h("FormDemos.Properties.Layout",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u5e03\u5c40",children:"\u5e03\u5c40"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.Layout,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},52426:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React from "react";\nimport { XphForm, IXphFormProps, IXphFormActionType } from "xph-crud";\nimport { Divider, Flex, Button } from "antd";\n\nconst ReactApp: React.FC = () => {\n  const props: IXphFormProps = {\n    colProps: { span: 11, offset: 1 },\n    labelCol: { style: { width: "100px" } },\n    labelAlign: "right",\n    items: [\n      {\n        name: "Input",\n        label: "Input",\n        component: "Input",\n        required: true,\n        componentProps: {},\n      },\n      {\n        name: "Select",\n        label: "Select",\n        component: "Select",\n        componentProps: {\n          options: [\n            { label: "\u6d4b\u8bd5", value: "1" },\n            { label: "\u6d4b\u8bd52", value: "2" },\n          ],\n        },\n      },\n      {\n        name: "InputNumber",\n        label: "InputNumber",\n        component: "InputNumber",\n        componentProps: {},\n      },\n    ],\n  };\n\n  const reactFormRef = React.useRef<IXphFormActionType>(null);\n\n  return (\n    <div>\n      <Flex gap={"small"}>\n        <Button\n          onClick={() =>\n            reactFormRef.current?.setFieldsValue({\n              Input: "Input",\n              Select: "1",\n              InputNumber: 0,\n            })\n          }\n        >\n          \u8bbe\u7f6e\u503c\n        </Button>\n        <Button\n          onClick={() => console.log(reactFormRef.current?.getFieldsValue())}\n        >\n          \u83b7\u53d6\u503c\n        </Button>\n        <Button onClick={() => reactFormRef.current?.validator()}>\u6821\u9a8c</Button>\n        <Button onClick={() => reactFormRef.current?.resetFields()}>\n          \u91cd\u7f6e\n        </Button>\n      </Flex>\n      <Divider />\n      <XphForm ref={reactFormRef} {...props}></XphForm>\n    </div>\n  );\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/ref",title:"ref",description:"instance",source:"@site/docs/comp/form/properties/ref.mdx",sourceDirName:"comp/form/properties",slug:"/comp/form/properties/ref",permalink:"/xph-crud/docs/comp/form/properties/ref",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"instance",id:"instance",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.Ref||h("FormDemos.Properties.Ref",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"instance",children:"instance"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.Ref,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},60162:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React from "react";\nimport { XphForm, IXphFormProps, useXphForm } from "xph-crud";\nimport { Divider, Flex, Button } from "antd";\n\nconst ReactApp: React.FC = () => {\n  const props: IXphFormProps = {\n    colProps: { span: 11, offset: 1 },\n    labelCol: { style: { width: "100px" } },\n    labelAlign: "right",\n    items: [\n      {\n        name: "Input",\n        label: "Input",\n        component: "Input",\n        required: true,\n        componentProps: {},\n      },\n      {\n        name: "Select",\n        label: "Select",\n        component: "Select",\n        componentProps: {\n          options: [\n            { label: "\u6d4b\u8bd5", value: "1" },\n            { label: "\u6d4b\u8bd52", value: "2" },\n          ],\n        },\n      },\n      {\n        name: "InputNumber",\n        label: "InputNumber",\n        component: "InputNumber",\n        componentProps: {},\n      },\n    ],\n  };\n\n  const [register, { setFieldsValue, getFieldsValue, resetFields, validator }] =\n    useXphForm();\n\n  return (\n    <div>\n      <Flex gap={"small"}>\n        <Button\n          onClick={() =>\n            setFieldsValue({ Input: "Input", Select: "1", InputNumber: 0 })\n          }\n        >\n          \u8bbe\u7f6e\u503c\n        </Button>\n        <Button onClick={() => console.log(getFieldsValue())}>\u83b7\u53d6\u503c</Button>\n        <Button onClick={() => validator()}>\u6821\u9a8c</Button>\n        <Button onClick={() => resetFields()}>\u91cd\u7f6e</Button>\n      </Flex>\n      <Divider />\n      <XphForm register={register} {...props}></XphForm>\n    </div>\n  );\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/register",title:"register",description:"\u6ce8\u518c",source:"@site/docs/comp/form/properties/register.mdx",sourceDirName:"comp/form/properties",slug:"/comp/form/properties/register",permalink:"/xph-crud/docs/comp/form/properties/register",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"\u6ce8\u518c",id:"\u6ce8\u518c",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.Register||h("FormDemos.Properties.Register",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u6ce8\u518c",children:"\u6ce8\u518c"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.Register,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},97491:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React from "react";\nimport { XphForm, IXphFormProps, useXphForm } from "xph-crud";\nimport { Flex, Button } from "antd";\n\nconst ReactApp: React.FC = () => {\n  const props: IXphFormProps = {\n    colProps: { span: 11, offset: 1 },\n    labelCol: { style: { width: "100px" } },\n    labelAlign: "right",\n    items: [\n      {\n        name: "Input",\n        label: "Input",\n        component: "Input",\n        required: true,\n        componentProps: {},\n      },\n      {\n        name: "Select",\n        label: "Select",\n        component: "Select",\n        componentProps: {\n          options: [\n            { label: "\u6d4b\u8bd5", value: "1" },\n            { label: "\u6d4b\u8bd52", value: "2" },\n          ],\n        },\n      },\n      {\n        name: "InputNumber",\n        label: "InputNumber",\n        component: "InputNumber",\n        componentProps: {},\n      },\n    ],\n    renderActions: () => {\n      return (\n        <div style={{ width: "100%" }}>\n          <Flex gap={"small"} justify={"flex-end"}>\n            <Button\n              type="primary"\n              onClick={() => console.log(getFieldsValue())}\n            >\n              \u67e5\u8be2\n            </Button>\n            <Button onClick={() => resetFields()}>\u91cd\u7f6e</Button>\n          </Flex>\n        </div>\n      );\n    },\n  };\n\n  const [register, { getFieldsValue, resetFields }] = useXphForm();\n\n  return <XphForm register={register} {...props}></XphForm>;\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/renderActions",title:"renderActions",description:"\u81ea\u5b9a\u4e49\u64cd\u4f5c\u7ec4",source:"@site/docs/comp/form/properties/renderActions.mdx",sourceDirName:"comp/form/properties",slug:"/comp/form/properties/renderActions",permalink:"/xph-crud/docs/comp/form/properties/renderActions",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"\u81ea\u5b9a\u4e49\u64cd\u4f5c\u7ec4",id:"\u81ea\u5b9a\u4e49\u64cd\u4f5c\u7ec4",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.RenderActions||h("FormDemos.Properties.RenderActions",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u81ea\u5b9a\u4e49\u64cd\u4f5c\u7ec4",children:"\u81ea\u5b9a\u4e49\u64cd\u4f5c\u7ec4"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.RenderActions,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},66738:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>m,toc:()=>u});var r=o(86106),t=o(66205),s=o(90310),p=o(36899);const i='import React, { useState } from "react";\nimport { XphForm, IXphFormProps } from "xph-crud";\nimport { Radio, Divider } from "antd";\n\nconst ReactApp: React.FC = () => {\n  const [size, setSize] = useState<"small" | "middle" | "large">("small");\n\n  const props: IXphFormProps = {\n    colProps: { span: 11, offset: 1 },\n    labelCol: { style: { width: "100px" } },\n    labelAlign: "right",\n    size,\n    items: [\n      {\n        name: "Input",\n        label: "Input",\n        component: "Input",\n        componentProps: {},\n      },\n      {\n        name: "Select",\n        label: "Select",\n        component: "Select",\n        componentProps: {\n          options: [\n            { label: "\u6d4b\u8bd5", value: "1" },\n            { label: "\u6d4b\u8bd52", value: "2" },\n          ],\n        },\n      },\n      {\n        name: "InputNumber",\n        label: "InputNumber",\n        component: "InputNumber",\n        componentProps: {},\n      },\n    ],\n  };\n\n  const onChange = (e) => {\n    setSize(e.target.value);\n  };\n\n  return (\n    <div>\n      <Radio.Group\n        options={[\n          {\n            label: "Small",\n            value: "small",\n          },\n          {\n            label: "Middle",\n            value: "middle",\n          },\n          {\n            label: "Large",\n            value: "large",\n          },\n        ]}\n        onChange={onChange}\n        value={size}\n        optionType="button"\n      />\n      <Divider />\n      <XphForm {...props}></XphForm>\n    </div>\n  );\n};\n\nexport default ReactApp;\n',a={},l=void 0,m={id:"comp/form/properties/size",title:"size",description:"\u5c3a\u5bf8",source:"@site/docs/comp/form/properties/size.mdx",sourceDirName:"comp/form/properties",slug:"/comp/form/properties/size",permalink:"/xph-crud/docs/comp/form/properties/size",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"\u5c3a\u5bf8",id:"\u5c3a\u5bf8",level:3}];function d(e){const n={h3:"h3",...(0,t.R)(),...e.components};return s.z9||h("FormDemos",!1),s.z9.Properties||h("FormDemos.Properties",!1),s.z9.Properties.Size||h("FormDemos.Properties.Size",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u5c3a\u5bf8",children:"\u5c3a\u5bf8"}),"\n",(0,r.jsx)(p.A,{rawStr:i,children:(0,r.jsx)(s.z9.Properties.Size,{})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);